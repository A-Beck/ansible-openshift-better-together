---

- name: Onboard a new team member 
  hosts: localhost
  vars:
    gitea_org: OpenShift 
  tasks:

  - name: Remove developer access to the team dev workspace # noqa: no-changed-when ignore-errors
    ignore_errors: true
    ansible.builtin.command:
      cmd: > 
        oc adm policy remove-role-from-user edit {{ username | urlencode | quote }} 
        -n topsecret-project-dev
        --insecure-skip-tls-verify=true
        --token {{ k8s_api_key | quote }}
        --server {{ k8s_host | quote }}

  - name: Delete the user sandbox namespace # noqa: no-changed-when ignore-errors
    ignore_errors: true
    ansible.builtin.command:
      cmd: >
        oc delete project "{{ username }}-sandbox"
        --insecure-skip-tls-verify=true
        --token {{ k8s_api_key | quote }}
        --server {{ k8s_host | quote }}

  - name: Get all Teams in the OpenShift Organization
    ansible.builtin.uri:
      url: "{{ gitea_api_base_url }}/orgs/{{ gitea_org }}/teams"
      method: get
      headers:
        Authorization: token {{ gitea_ops_token }}
      user: "{{ gitea_ops_user }}"
    register: org_teams

  - name: Get the developer team ID
    when: item.name == 'Developers'
    ansible.builtin.set_fact:
      dev_team_id: "{{ item.id }}"
    loop: "{{ org_teams.json }}"

  - name: Remove user from the developer team # noqa: ignore-errors
    ignore_errors: true
    ansible.builtin.uri:
      url: "{{ gitea_api_base_url }}/teams/{{ dev_team_id }}/members/{{ username }}"
      method: delete
      headers:
        Authorization: token {{ gitea_ops_token }}
      user: "{{ gitea_ops_user }}"
      status_code:
        - 204


  - name: Delete Users # noqa: ignore-errors
    ignore_errors: true
    ansible.builtin.uri:
      url: "{{ gitea_api_base_url }}/admin/users/{{ username | urlencode }}"
      body:
        purge: true
      status_code:
        - 204
      body_format: json
      method: delete
      headers:
        Authorization: token {{ gitea_ops_token }}
      user: "{{ gitea_ops_user }}"
